<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cii.bomse.house.industry.entity.FloorIndustryEntity">

    <resultMap id="BaseResultMap" type="com.cii.bomse.house.industry.entity.FloorIndustryEntity">
        <result column="park_id" property="parkId" jdbcType="NUMERIC" javaType="java.lang.Long"/>
        <result column="building_id" property="buildingId" jdbcType="NUMERIC" javaType="java.lang.Long"/>
        <result column="floor_number" property="floorNumber" jdbcType="NUMERIC" javaType="java.lang.Integer"/>
        <result column="house_use_type" property="houseUseType" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="total_acreage" property="totalAcreage" jdbcType="NUMERIC" javaType="java.lang.Float"/>
        <result column="lease_acreage" property="leaseAcreage" jdbcType="NUMERIC" javaType="java.lang.Float"/>
        <result column="lease_acreage_min" property="leaseAcreageMin" jdbcType="NUMERIC" javaType="java.lang.Float"/>
        <result column="price" property="price" jdbcType="NUMERIC" javaType="java.lang.Float"/>
        <result column="price_unit" property="priceUnit" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="floor_height" property="floorHeight" jdbcType="NUMERIC" javaType="java.lang.Float"/>
        <result column="bearing" property="bearing" jdbcType="NUMERIC" javaType="java.lang.Float"/>
        <result column="floor_board_type" property="floorBoardType" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="fire_device_type" property="fireDeviceType" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="has_bridge_crane" property="hasBridgeCrane" jdbcType="BOOLEAN" javaType="java.lang.Boolean"/>
        <result column="lease_type" property="leaseType" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="lease_term_min" property="leaseTermMin" jdbcType="NUMERIC" javaType="java.lang.Integer"/>
        <result column="enter_time" property="enterTime" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <result column="fit_industry" property="fitIndustry" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="house_from" property="houseFrom" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="agreement_images" property="agreementImages" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="title" property="title" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="keywords" property="keywords" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="description" property="description" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="slogan" property="slogan" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="chief_slogan" property="chiefSlogan" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="floor_images" property="floorImages" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="id" property="id" jdbcType="NUMERIC" javaType="java.lang.Long"/>
        <result column="remark" property="remark" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="owner_id" property="ownerId" jdbcType="NUMERIC" javaType="java.lang.Long"/>
        <result column="owner_name" property="ownerName" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="owner_dept_id" property="ownerDeptId" jdbcType="NUMERIC" javaType="java.lang.Long"/>
        <result column="owner_dept_name" property="ownerDeptName" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="create_id" property="createId" jdbcType="NUMERIC" javaType="java.lang.Long"/>
        <result column="create_name" property="createName" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="create_dept_id" property="createDeptId" jdbcType="NUMERIC" javaType="java.lang.Long"/>
        <result column="create_dept_name" property="createDeptName" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="last_update_id" property="lastUpdateId" jdbcType="NUMERIC" javaType="java.lang.Long"/>
        <result column="last_update_name" property="lastUpdateName" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <result column="is_deleted" property="isDeleted" jdbcType="BOOLEAN" javaType="java.lang.Boolean"/>
        <result column="cpy_id" property="cpyId" jdbcType="NUMERIC" javaType="java.lang.Long"/>

        <association property="building" columnPrefix="b_"
                     resultMap="com.cii.bomse.house.industry.entity.BuildingIndustryEntity.BaseResultMap">
        </association>
        <association property="park" columnPrefix="p_"
                     resultMap="com.cii.bomse.house.industry.entity.ParkIndustryEntity.BaseResultMap">
        </association>
    </resultMap>

    <!-- 批量新增信息到数据库中 -->
    <insert id="batchInsert" parameterType="java.util.List">
        <foreach collection="list" item="i" separator=";">
            INSERT INTO t_boms_house_industry_floor
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="i.parkId != null">
                    park_id,
                </if>
                <if test="i.buildingId != null">
                    building_id,
                </if>
                <if test="i.floorNumber != null">
                    floor_number,
                </if>
                <if test="i.houseUseType != null and i.houseUseType != ''">
                    house_use_type,
                </if>
                <if test="i.totalAcreage != null">
                    total_acreage,
                </if>
                <if test="i.leaseAcreage != null">
                    lease_acreage,
                </if>
                <if test="i.leaseAcreageMin != null">
                    lease_acreage_min,
                </if>
                <if test="i.price != null">
                    price,
                </if>
                <if test="i.priceUnit != null and i.priceUnit != ''">
                    price_unit,
                </if>
                <if test="i.floorHeight != null">
                    floor_height,
                </if>
                <if test="i.bearing != null">
                    bearing,
                </if>
                <if test="i.floorBoardType != null and i.floorBoardType != ''">
                    floor_board_type,
                </if>
                <if test="i.fireDeviceType != null and i.fireDeviceType != ''">
                    fire_device_type,
                </if>
                <if test="i.hasBridgeCrane != null">
                    has_bridge_crane,
                </if>
                <if test="i.leaseType != null and i.leaseType != ''">
                    lease_type,
                </if>
                <if test="i.leaseTermMin != null">
                    lease_term_min,
                </if>
                <if test="i.enterTime != null">
                    enter_time,
                </if>
                <if test="i.fitIndustry != null and i.fitIndustry != ''">
                    fit_industry,
                </if>
                <if test="i.houseFrom != null and i.houseFrom != ''">
                    house_from,
                </if>
                <if test="i.agreementImages != null and i.agreementImages != ''">
                    agreement_images,
                </if>
                <if test="i.title != null and i.title != ''">
                    title,
                </if>
                <if test="i.keywords != null and i.keywords != ''">
                    keywords,
                </if>
                <if test="i.description != null and i.description != ''">
                    description,
                </if>
                <if test="i.slogan != null and i.slogan != ''">
                    slogan,
                </if>
                <if test="i.chiefSlogan != null and i.chiefSlogan != ''">
                    chief_slogan,
                </if>
                <if test="i.floorImages != null and i.floorImages != ''">
                    floor_images,
                </if>
                <if test="i.id != null">
                    id,
                </if>
                <if test="i.remark != null and i.remark != ''">
                    remark,
                </if>
                <if test="i.ownerId != null">
                    owner_id,
                </if>
                <if test="i.ownerName != null and i.ownerName != ''">
                    owner_name,
                </if>
                <if test="i.ownerDeptId != null">
                    owner_dept_id,
                </if>
                <if test="i.ownerDeptName != null and i.ownerDeptName != ''">
                    owner_dept_name,
                </if>
                <if test="i.createId != null">
                    create_id,
                </if>
                <if test="i.createName != null and i.createName != ''">
                    create_name,
                </if>
                <if test="i.createDeptId != null">
                    create_dept_id,
                </if>
                <if test="i.createDeptName != null and i.createDeptName != ''">
                    create_dept_name,
                </if>
                <if test="i.lastUpdateId != null">
                    last_update_id,
                </if>
                <if test="i.lastUpdateName != null and i.lastUpdateName != ''">
                    last_update_name,
                </if>
                <if test="i.createTime != null">
                    create_time,
                </if>
                <if test="i.lastUpdateTime != null">
                    last_update_time,
                </if>
                <if test="i.isDeleted != null">
                    is_deleted,
                </if>
                <if test="i.cpyId != null">
                    cpy_id,
                </if>

            </trim>
            <trim prefix="values (" suffix=")" suffixOverrides=",">

                <if test="i.parkId != null">
                    #{i.parkId},
                </if>
                <if test="i.buildingId != null">
                    #{i.buildingId},
                </if>
                <if test="i.floorNumber != null">
                    #{i.floorNumber},
                </if>
                <if test="i.houseUseType != null and i.houseUseType != ''">
                    #{i.houseUseType},
                </if>
                <if test="i.totalAcreage != null">
                    #{i.totalAcreage},
                </if>
                <if test="i.leaseAcreage != null">
                    #{i.leaseAcreage},
                </if>
                <if test="i.leaseAcreageMin != null">
                    #{i.leaseAcreageMin},
                </if>
                <if test="i.price != null">
                    #{i.price},
                </if>
                <if test="i.priceUnit != null and i.priceUnit != ''">
                    #{i.priceUnit},
                </if>
                <if test="i.floorHeight != null">
                    #{i.floorHeight},
                </if>
                <if test="i.bearing != null">
                    #{i.bearing},
                </if>
                <if test="i.floorBoardType != null and i.floorBoardType != ''">
                    #{i.floorBoardType},
                </if>
                <if test="i.fireDeviceType != null and i.fireDeviceType != ''">
                    #{i.fireDeviceType},
                </if>
                <if test="i.hasBridgeCrane != null">
                    #{i.hasBridgeCrane},
                </if>
                <if test="i.leaseType != null and i.leaseType != ''">
                    #{i.leaseType},
                </if>
                <if test="i.leaseTermMin != null">
                    #{i.leaseTermMin},
                </if>
                <if test="i.enterTime != null">
                    #{i.enterTime},
                </if>
                <if test="i.fitIndustry != null and i.fitIndustry != ''">
                    #{i.fitIndustry},
                </if>
                <if test="i.houseFrom != null and i.houseFrom != ''">
                    #{i.houseFrom},
                </if>
                <if test="i.agreementImages != null and i.agreementImages != ''">
                    #{i.agreementImages},
                </if>
                <if test="i.title != null and i.title != ''">
                    #{i.title},
                </if>
                <if test="i.keywords != null and i.keywords != ''">
                    #{i.keywords},
                </if>
                <if test="i.description != null and i.description != ''">
                    #{i.description},
                </if>
                <if test="i.slogan != null and i.slogan != ''">
                    #{i.slogan},
                </if>
                <if test="i.chiefSlogan != null and i.chiefSlogan != ''">
                    #{i.chiefSlogan},
                </if>
                <if test="i.floorImages != null and i.floorImages != ''">
                    #{i.floorImages},
                </if>
                <if test="i.id != null">
                    #{i.id},
                </if>
                <if test="i.remark != null and i.remark != ''">
                    #{i.remark},
                </if>
                <if test="i.ownerId != null">
                    #{i.ownerId},
                </if>
                <if test="i.ownerName != null and i.ownerName != ''">
                    #{i.ownerName},
                </if>
                <if test="i.ownerDeptId != null">
                    #{i.ownerDeptId},
                </if>
                <if test="i.ownerDeptName != null and i.ownerDeptName != ''">
                    #{i.ownerDeptName},
                </if>
                <if test="i.createId != null">
                    #{i.createId},
                </if>
                <if test="i.createName != null and i.createName != ''">
                    #{i.createName},
                </if>
                <if test="i.createDeptId != null">
                    #{i.createDeptId},
                </if>
                <if test="i.createDeptName != null and i.createDeptName != ''">
                    #{i.createDeptName},
                </if>
                <if test="i.lastUpdateId != null">
                    #{i.lastUpdateId},
                </if>
                <if test="i.lastUpdateName != null and i.lastUpdateName != ''">
                    #{i.lastUpdateName},
                </if>
                <if test="i.createTime != null">
                    #{i.createTime},
                </if>
                <if test="i.lastUpdateTime != null">
                    #{i.lastUpdateTime},
                </if>
                <if test="i.isDeleted != null">
                    #{i.isDeleted},
                </if>
                <if test="i.cpyId != null">
                    #{i.cpyId},
                </if>
            </trim>
        </foreach>
    </insert>

    <!-- 批量更新数据信息 -->
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" item="i" index="index" separator=";">
            UPDATE t_boms_house_industry_floor
            <trim prefix="set" suffixOverrides=",">
                <if test="i.parkId != null">
                    park_id = #{i.parkId},
                </if>
                <if test="i.buildingId != null">
                    building_id = #{i.buildingId},
                </if>
                <if test="i.floorNumber != null">
                    floor_number = #{i.floorNumber},
                </if>
                <if test="i.houseUseType != null and i.houseUseType != ''">
                    house_use_type = #{i.houseUseType},
                </if>
                <if test="i.totalAcreage != null">
                    total_acreage = #{i.totalAcreage},
                </if>
                <if test="i.leaseAcreage != null">
                    lease_acreage = #{i.leaseAcreage},
                </if>
                <if test="i.leaseAcreageMin != null">
                    lease_acreage_min = #{i.leaseAcreageMin},
                </if>
                <if test="i.price != null">
                    price = #{i.price},
                </if>
                <if test="i.priceUnit != null and i.priceUnit != ''">
                    price_unit = #{i.priceUnit},
                </if>
                <if test="i.floorHeight != null">
                    floor_height = #{i.floorHeight},
                </if>
                <if test="i.bearing != null">
                    bearing = #{i.bearing},
                </if>
                <if test="i.floorBoardType != null and i.floorBoardType != ''">
                    floor_board_type = #{i.floorBoardType},
                </if>
                <if test="i.fireDeviceType != null and i.fireDeviceType != ''">
                    fire_device_type = #{i.fireDeviceType},
                </if>
                <if test="i.hasBridgeCrane != null">
                    has_bridge_crane = #{i.hasBridgeCrane},
                </if>
                <if test="i.leaseType != null and i.leaseType != ''">
                    lease_type = #{i.leaseType},
                </if>
                <if test="i.leaseTermMin != null">
                    lease_term_min = #{i.leaseTermMin},
                </if>
                <if test="i.enterTime != null">
                    enter_time = #{i.enterTime},
                </if>
                <if test="i.fitIndustry != null and i.fitIndustry != ''">
                    fit_industry = #{i.fitIndustry},
                </if>
                <if test="i.houseFrom != null and i.houseFrom != ''">
                    house_from = #{i.houseFrom},
                </if>
                <if test="i.agreementImages != null and i.agreementImages != ''">
                    agreement_images = #{i.agreementImages},
                </if>
                <if test="i.title != null and i.title != ''">
                    title = #{i.title},
                </if>
                <if test="i.keywords != null and i.keywords != ''">
                    keywords = #{i.keywords},
                </if>
                <if test="i.description != null and i.description != ''">
                    description = #{i.description},
                </if>
                <if test="i.slogan != null and i.slogan != ''">
                    slogan = #{i.slogan},
                </if>
                <if test="i.chiefSlogan != null and i.chiefSlogan != ''">
                    chief_slogan = #{i.chiefSlogan},
                </if>
                <if test="i.floorImages != null and i.floorImages != ''">
                    floor_images = #{i.floorImages},
                </if>
                <if test="i.id != null">
                    id = #{i.id},
                </if>
                <if test="i.remark != null and i.remark != ''">
                    remark = #{i.remark},
                </if>
                <if test="i.ownerId != null">
                    owner_id = #{i.ownerId},
                </if>
                <if test="i.ownerName != null and i.ownerName != ''">
                    owner_name = #{i.ownerName},
                </if>
                <if test="i.ownerDeptId != null">
                    owner_dept_id = #{i.ownerDeptId},
                </if>
                <if test="i.ownerDeptName != null and i.ownerDeptName != ''">
                    owner_dept_name = #{i.ownerDeptName},
                </if>
                <if test="i.createId != null">
                    create_id = #{i.createId},
                </if>
                <if test="i.createName != null and i.createName != ''">
                    create_name = #{i.createName},
                </if>
                <if test="i.createDeptId != null">
                    create_dept_id = #{i.createDeptId},
                </if>
                <if test="i.createDeptName != null and i.createDeptName != ''">
                    create_dept_name = #{i.createDeptName},
                </if>
                <if test="i.lastUpdateId != null">
                    last_update_id = #{i.lastUpdateId},
                </if>
                <if test="i.lastUpdateName != null and i.lastUpdateName != ''">
                    last_update_name = #{i.lastUpdateName},
                </if>
                <if test="i.createTime != null">
                    create_time = #{i.createTime},
                </if>
                <if test="i.lastUpdateTime != null">
                    last_update_time = #{i.lastUpdateTime},
                </if>
                <if test="i.isDeleted != null">
                    is_deleted = #{i.isDeleted},
                </if>
                <if test="i.cpyId != null">
                    cpy_id = #{i.cpyId},
                </if>
            </trim>
            <trim prefix="where" prefixOverrides="AND|OR">
                id = #{i.id}
                <if test="i.cpyId != null">
                    AND cpy_id = #{i.cpyId}
                </if>
            </trim>
        </foreach>
    </update>

    <!-- 通过主键批量物理删除数据 -->
    <delete id="batchDeleteByIds" parameterType="java.util.List">
        DELETE FROM t_boms_house_industry_floor WHERE ID IN
        <foreach collection="list" item="i" open="(" separator="," close=")">
            #{i}
        </foreach>
    </delete>

    <!-- 通过条件删除指定数据-->
    <delete id="deleteByMap" parameterType="map">
        delete from t_boms_house_industry_floor t
        <include refid="selectSql"></include>
    </delete>
    <!--执行本地更新 -->
    <update id="updateByNativeSql" parameterType="string">
        ${value}
    </update>

    <!-- 根据原生Sql查询记录 -->
    <select id="selectByNativeSql" parameterType="string" resultMap="BaseResultMap">
        ${value}
    </select>

    <!-- 根据原生SQL查询单条记录-->
    <select id="selectOneByNativeSql" parameterType="string" resultMap="BaseResultMap">
        ${value}
    </select>

    <!-- 根据原生Sql统计数量 -->
    <select id="countByNativeSql" parameterType="string" resultType="int">
        ${value}
    </select>

    <!-- 通用脚本查询条件 -->
    <sql id="selectSql">
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="keyword != null">
                AND (
                p.city_name like '%'||#{keyword}||'%'
                or p.region_name like '%'||#{keyword}||'%'
                or p.street_name like '%'||#{keyword}||'%'
                or p.community_name like '%'||#{keyword}||'%'
                or p.address like '%'||#{keyword}||'%'
                or p.pk_name like '%'||#{keyword}||'%'
                or b.bd_name like '%'||#{keyword}||'%'
                or b.bd_name_desc like '%'||#{keyword}||'%'
                )
            </if>

            <if test="houseUseTypeList != null">
                AND (
                    <trim prefixOverrides="AND|OR">
                        <foreach collection="houseUseTypeList" item="item">
                            OR t.house_use_type like '%'||#{item}||'%'
                        </foreach>
                    </trim>
                )
            </if>

            <!-- 园区条件-->
            <choose>
                <when test="communityId != null">
                    AND p.community_id = #{communityId}
                </when>
                <when test="streetId != null">
                    AND p.street_id = #{streetId}
                </when>
                <when test="regionId != null">
                    AND p.region_id = #{regionId}
                </when>
                <when test="cityId != null">
                    AND p.city_id = #{cityId}
                </when>
            </choose>
            <choose>
                <when test="communityIds != null">
                    AND p.community_id in
                    <foreach collection="communityIds" open="(" separator="," close=")" item="item">
                        #{item}
                    </foreach>
                </when>
                <when test="streetIds != null">
                    AND p.street_id in
                    <foreach collection="streetIds" open="(" separator="," close=")" item="item">
                        #{item}
                    </foreach>
                </when>
                <when test="regionIds != null">
                    AND p.region_id in
                    <foreach collection="regionIds" open="(" separator="," close=")" item="item">
                        #{item}
                    </foreach>
                </when>
                <when test="cityIds != null">
                    AND p.city_id in
                    <foreach collection="cityIds" open="(" separator="," close=")" item="item">
                        #{item}
                    </foreach>
                </when>
            </choose>
            <if test="address != null">
                AND p.address like '%'|| #{address}||'%'
            </if>
            <if test="hasTax != null">
                AND p.has_tax = #{hasTax}
            </if>
            <if test="canRegistry != null">
                AND p.can_registry = #{canRegistry}
            </if>
            <if test="hasMonitor != null">
                AND p.has_monitor = #{hasMonitor}
            </if>
            <if test="hasGuard != null">
                AND p.has_guard = #{hasGuard}
            </if>
            <if test="hasCanteen != null">
                AND p.has_canteen = #{hasCanteen}
            </if>
            <if test="hasOffice != null">
                AND p.has_office = #{hasOffice}
            </if>
            <if test="hasParkingSpace != null">
                AND p.has_parking_space = #{hasParkingSpace}
            </if>
            <if test="singlePark != null">
                AND p.single_park = #{singlePark}
            </if>
            <if test="openSpaceAcreageStart != null">
                AND p.open_space_acreage <![CDATA[ >= ]]> #{openSpaceAcreageStart}
            </if>
            <if test="openSpaceAcreageEnd != null">
                AND p.open_space_acreage <![CDATA[ <= ]]> #{openSpaceAcreageEnd}
            </if>

            <!-- 建筑条件-->
            <if test="structureType != null">
                AND b.structure_type = #{structureType}
            </if>
            <if test="singleFloor != null">
                AND b.single_floor = #{singleFloor}
            </if>
            <if test="hasLift != null">
                AND b.has_lift = #{hasLift}
            </if>
            <if test="hasRailway != null">
                AND b.has_railway = #{hasRailway}
            </if>
            <if test="railwayType != null">
                AND b.railway_type = #{railwayType}
            </if>
            <if test="hasCanopy != null">
                AND b.has_canopy = #{hasCanopy}
            </if>
            <if test="uploadType != null">
                AND b.upload_type = #{uploadType}
            </if>
            <!--楼层条件-->
            <if test="parkId != null">
                AND t.park_id = #{parkId}
            </if>
            <if test="buildingId != null">
                AND t.building_id = #{buildingId}
            </if>
            <if test="floorNumber != null">
                AND t.floor_number = #{floorNumber}
            </if>
            <if test="floorNumberStart != null">
                AND t.floor_number <![CDATA[ >= ]]> #{floorNumberStart}
            </if>
            <if test="floorNumberEnd != null">
                AND t.floor_number <![CDATA[ <= ]]> #{floorNumberEnd}
            </if>
            <if test="totalAcreageStart != null">
                AND t.total_acreage <![CDATA[ >= ]]> #{totalAcreageStart}
            </if>
            <if test="totalAcreageEnd != null">
                AND t.total_acreage <![CDATA[ <= ]]> #{totalAcreageEnd}
            </if>
            <if test="leaseAcreageStart != null">
                AND t.lease_acreage <![CDATA[ >= ]]> #{leaseAcreageStart}
            </if>
            <if test="leaseAcreageEnd != null">
                AND t.lease_acreage <![CDATA[ <= ]]> #{leaseAcreageEnd}
            </if>
            <if test="leaseAcreageMinStart != null">
                AND t.lease_acreage_min <![CDATA[ >= ]]> #{leaseAcreageMinStart}
            </if>
            <if test="leaseAcreageMinEnd != null">
                AND t.lease_acreage_min <![CDATA[ <= ]]> #{leaseAcreageMinEnd}
            </if>
            <if test="priceStart != null">
                AND t.price <![CDATA[ >= ]]> #{priceStart}
            </if>
            <if test="priceEnd != null">
                AND t.price <![CDATA[ <= ]]> #{priceEnd}
            </if>
            <if test="priceUnit != null">
                AND t.price_unit = #{priceUnit}
            </if>
            <if test="floorHeightStart != null">
                AND t.floor_height <![CDATA[ >= ]]> #{floorHeightStart}
            </if>
            <if test="floorHeightEnd != null">
                AND t.floor_height <![CDATA[ <= ]]> #{floorHeightEnd}
            </if>
            <if test="bearingStart != null">
                AND t.bearing <![CDATA[ >= ]]> #{bearingStart}
            </if>
            <if test="bearingEnd != null">
                AND t.bearing <![CDATA[ <= ]]> #{bearingEnd}
            </if>
            <if test="floorBoardType != null">
                AND t.floor_board_type = #{floorBoardType}
            </if>
            <if test="fireDeviceType != null">
                AND t.fire_device_type = #{fireDeviceType}
            </if>
            <if test="hasBridgeCrane != null">
                AND t.has_bridge_crane = #{hasBridgeCrane}
            </if>
            <if test="leaseType != null">
                AND t.lease_type = #{leaseType}
            </if>
            <if test="leaseTermMinStart != null">
                AND t.lease_term_min <![CDATA[ >= ]]> #{leaseTermMinStart}
            </if>
            <if test="leaseTermMinEnd != null">
                AND t.lease_term_min <![CDATA[ <= ]]> #{leaseTermMinEnd}
            </if>
            <if test="enterTimeStart != null">
                AND t.enter_time <![CDATA[ >= ]]> #{enterTimeStart}
            </if>
            <if test="enterTimeEnd != null">
                AND t.enter_time <![CDATA[ <= ]]> #{enterTimeEnd}
            </if>
            <if test="fitIndustry != null">
                AND t.fit_industry = #{fitIndustry}
            </if>
            <if test="houseFrom != null">
                AND t.house_from = #{houseFrom}
            </if>
            <if test="agreementImages != null">
                AND t.agreement_images = #{agreementImages}
            </if>
            <if test="title != null">
                AND t.title = #{title}
            </if>
            <if test="keywords != null">
                AND t.keywords = #{keywords}
            </if>
            <if test="description != null">
                AND t.description = #{description}
            </if>
            <if test="slogan != null">
                AND t.slogan = #{slogan}
            </if>
            <if test="chiefSlogan != null">
                AND t.chief_slogan = #{chiefSlogan}
            </if>
            <if test="floorImages != null">
                AND t.floor_images = #{floorImages}
            </if>
            <if test="id != null">
                AND t.id = #{id}
            </if>
            <if test="remark != null">
                AND t.remark = #{remark}
            </if>
            <if test="ownerId != null">
                AND t.owner_id = #{ownerId}
            </if>
            <if test="ownerName != null">
                AND t.owner_name = #{ownerName}
            </if>
            <if test="ownerDeptId != null">
                AND t.owner_dept_id = #{ownerDeptId}
            </if>
            <if test="ownerDeptName != null">
                AND t.owner_dept_name = #{ownerDeptName}
            </if>
            <if test="createId != null">
                AND t.create_id = #{createId}
            </if>
            <if test="createName != null">
                AND t.create_name = #{createName}
            </if>
            <if test="createDeptId != null">
                AND t.create_dept_id = #{createDeptId}
            </if>
            <if test="createDeptName != null">
                AND t.create_dept_name = #{createDeptName}
            </if>
            <if test="lastUpdateId != null">
                AND t.last_update_id = #{lastUpdateId}
            </if>
            <if test="lastUpdateName != null">
                AND t.last_update_name = #{lastUpdateName}
            </if>
            <if test="createTimeStart != null">
                AND t.create_time <![CDATA[ >= ]]> #{createTimeStart}
            </if>
            <if test="createTimeEnd != null">
                AND t.create_time <![CDATA[ <= ]]> #{createTimeEnd}
            </if>
            <if test="lastUpdateTimeStart != null">
                AND t.last_update_time <![CDATA[ >= ]]> #{lastUpdateTimeStart}
            </if>
            <if test="lastUpdateTimeEnd != null">
                AND t.last_update_time <![CDATA[ <= ]]> #{lastUpdateTimeEnd}
            </if>
            <if test="isDeleted != null">
                AND t.is_deleted = #{isDeleted}
            </if>
            <if test="cpyId != null">
                AND t.cpy_id = #{cpyId}
            </if>
        </trim>
    </sql>

    <!-- 查询唯一的信息 -->
    <select id="selectUniqueByProp" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT t.*,
        b.id as b_id,
        b.bd_name as b_bd_name,
        b.bd_name_desc as b_bd_name_desc,
        b.structure_type as b_structure_type,
        b.single_floor as b_single_floor,
        b.has_lift as b_has_lift,
        b.lift_count as b_lift_count,
        b.lift_bearing as b_lift_bearing,
        b.has_railway as b_has_railway,
        b.railway_type as b_railway_type,
        b.railway_height as b_railway_height,
        b.railway_width as b_railway_width,
        b.has_canopy as b_has_canopy,
        b.canopy_width as b_canopy_width,
        b.upload_type as b_upload_type,
        b.floor_count as b_floor_count,
        b.owner_id as b_owner_id,
        b.owner_name as b_owner_name,
        b.owner_dept_id as b_owner_dept_id,
        b.owner_dept_name as b_owner_dept_name,
        b.create_id as b_create_id,
        b.create_name as b_create_name,
        b.create_dept_id as b_create_dept_id,
        b.create_dept_name as b_create_dept_name,
        b.create_time as b_create_time,
        b.cpy_id as b_cpy_id,
        p.id as p_id,
        p.city_id as p_city_id,
        p.city_name as p_city_name,
        p.region_id as p_region_id,
        p.region_name as p_region_name,
        p.street_id as p_street_id,
        p.street_name as p_street_name,
        p.community_id as p_community_id,
        p.community_name as p_community_name,
        p.address as p_address,
        p.pk_name as p_pk_name,
        p.longitude as p_longitude,
        p.latitude as p_latitude,
        p.certificate_type as p_certificate_type,
        p.land_use_type as p_land_use_type,
        p.voltage as p_voltage,
        p.has_tax as p_has_tax,
        p.can_registry as p_can_registry,
        p.has_monitor as p_has_monitor,
        p.has_guard as p_has_guard,
        p.has_canteen as p_has_canteen,
        p.has_office as p_has_office,
        p.has_parking_space as p_has_parking_space,
        p.single_park as p_single_park,
        p.open_space_acreage as p_open_space_acreage,
        p.location_advantage as p_location_advantage,
        p.fit_industry as p_fit_industry,
        p.building_count as p_building_count,
        p.lease_acreage_min as p_lease_acreage_min,
        p.lease_acreage as p_lease_acreage,
        p.price_min as p_price_min,
        p.price_min_unit as p_price_min_unit,
        p.title as p_title,
        p.keywords as p_keywords,
        p.description as p_description,
        p.slogan as p_slogan,
        p.chief_slogan as p_chief_slogan,
        p.park_images as p_park_images,
        p.owner_id as p_owner_id,
        p.owner_name as p_owner_name,
        p.owner_dept_id as p_owner_dept_id,
        p.owner_dept_name as p_owner_dept_name,
        p.create_id as p_create_id,
        p.create_name as p_create_name,
        p.create_dept_id as p_create_dept_id,
        p.create_dept_name as p_create_dept_name,
        p.create_time as p_create_time,
        p.cpy_id as p_cpy_id
        from t_boms_house_industry_floor t
        left join t_boms_house_industry_building b on b.id = t.building_id
        left join t_boms_house_industry_park p on p.id = t.park_id
        <include refid="selectSql"/>
    </select>

    <!--查询字段-->
    <select id="selectUniqueByPropColumns" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT
        <choose>
            <when test="_columns != null">
                <foreach collection="_columns" separator="," item="item">
                    ${item}
                </foreach>
            </when>
            <otherwise>
                t.*
            </otherwise>
        </choose>
        from t_boms_house_industry_floor t
        <include refid="selectSql"/>
    </select>

    <!-- 通过指定条件查询信息总数，用于分页展示 -->
    <select id="countByMap" parameterType="java.util.Map" resultType="int">
        SELECT count(*)
        from t_boms_house_industry_floor t
        <include refid="selectSql"/>
    </select>

    <!-- 通过指定条件查询信息 -->
    <select id="selectByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT t.*,
        b.id as b_id,
        b.bd_name as b_bd_name,
        b.bd_name_desc as b_bd_name_desc,
        b.structure_type as b_structure_type,
        b.single_floor as b_single_floor,
        b.has_lift as b_has_lift,
        b.lift_count as b_lift_count,
        b.lift_bearing as b_lift_bearing,
        b.has_railway as b_has_railway,
        b.railway_type as b_railway_type,
        b.railway_height as b_railway_height,
        b.railway_width as b_railway_width,
        b.has_canopy as b_has_canopy,
        b.canopy_width as b_canopy_width,
        b.upload_type as b_upload_type,
        b.floor_count as b_floor_count,
        b.owner_id as b_owner_id,
        b.owner_name as b_owner_name,
        b.owner_dept_id as b_owner_dept_id,
        b.owner_dept_name as b_owner_dept_name,
        b.create_id as b_create_id,
        b.create_name as b_create_name,
        b.create_dept_id as b_create_dept_id,
        b.create_dept_name as b_create_dept_name,
        b.create_time as b_create_time,
        b.cpy_id as b_cpy_id,
        p.id as p_id,
        p.city_id as p_city_id,
        p.city_name as p_city_name,
        p.region_id as p_region_id,
        p.region_name as p_region_name,
        p.street_id as p_street_id,
        p.street_name as p_street_name,
        p.community_id as p_community_id,
        p.community_name as p_community_name,
        p.address as p_address,
        p.pk_name as p_pk_name,
        p.longitude as p_longitude,
        p.latitude as p_latitude,
        p.certificate_type as p_certificate_type,
        p.land_use_type as p_land_use_type,
        p.voltage as p_voltage,
        p.has_tax as p_has_tax,
        p.can_registry as p_can_registry,
        p.has_monitor as p_has_monitor,
        p.has_guard as p_has_guard,
        p.has_canteen as p_has_canteen,
        p.has_office as p_has_office,
        p.has_parking_space as p_has_parking_space,
        p.single_park as p_single_park,
        p.open_space_acreage as p_open_space_acreage,
        p.location_advantage as p_location_advantage,
        p.fit_industry as p_fit_industry,
        p.building_count as p_building_count,
        p.lease_acreage_min as p_lease_acreage_min,
        p.lease_acreage as p_lease_acreage,
        p.price_min as p_price_min,
        p.price_min_unit as p_price_min_unit,
        p.title as p_title,
        p.keywords as p_keywords,
        p.description as p_description,
        p.slogan as p_slogan,
        p.chief_slogan as p_chief_slogan,
        p.park_images as p_park_images,
        p.owner_id as p_owner_id,
        p.owner_name as p_owner_name,
        p.owner_dept_id as p_owner_dept_id,
        p.owner_dept_name as p_owner_dept_name,
        p.create_id as p_create_id,
        p.create_name as p_create_name,
        p.create_dept_id as p_create_dept_id,
        p.create_dept_name as p_create_dept_name,
        p.create_time as p_create_time,
        p.cpy_id as p_cpy_id
        from t_boms_house_industry_floor t
        left join t_boms_house_industry_building b on b.id = t.building_id
        left join t_boms_house_industry_park p on p.id = t.park_id
        <include refid="selectSql"/>
        <if test="orderBy != null">
            ORDER BY ${orderBy}
        </if>
        <if test="order != null">
            ${order}
        </if>
    </select>

    <!-- 通过指定条件查询信息总数，用于分页展示 -->
    <select id="selectByMapCount" parameterType="java.util.Map" resultType="int">
        SELECT count(*) from t_boms_house_industry_floor t
        left join t_boms_house_industry_building b on b.id = t.building_id
        left join t_boms_house_industry_park p on p.id = t.park_id
        <include refid="selectSql"/>
    </select>

    <!-- 通过指定条件查询信息 -->
    <select id="selectByMapSimple" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT
        <choose>
            <when test="_columns != null">
                <foreach collection="_columns" separator="," item="item">
                    ${item}
                </foreach>
            </when>
            <otherwise>
                t.*
            </otherwise>
        </choose>
        from t_boms_house_industry_floor t
        <include refid="selectSql"/>
        <if test="orderBy != null">
            ORDER BY ${orderBy}
        </if>
        <if test="order != null">
            ${order}
        </if>
    </select>

    <!-- 通过指定条件查询信息总数，用于分页展示 -->
    <select id="selectByMapSimpleCount" parameterType="java.util.Map" resultType="int">
        SELECT count(*) from t_boms_house_industry_floor t
        <include refid="selectSql"/>
    </select>

    <!--统计园区信息-->
    <select id="selectParkStatistic" parameterType="java.util.Map" resultMap="BaseResultMap">
        select max(park_id) as park_id,
        max(building_id) as building_id,
        min(lease_acreage_min) as lease_acreage_min,
        sum(lease_acreage) as lease_acreage,
        min(price) as price,
        max(price_unit) as price_unit,
        max(floor_height) as floor_height
        from t_boms_house_industry_floor t
        <include refid="selectSql"/>
    </select>
</mapper>