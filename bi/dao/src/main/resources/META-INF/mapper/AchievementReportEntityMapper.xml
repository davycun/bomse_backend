<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cii.bomse.bi.entity.AchievementReportEntity">

    <resultMap id="BaseResultMap" type="com.cii.bomse.bi.entity.AchievementReportEntity">
        <result column="customer_personal_count" property="customerPersonalCount" jdbcType="NUMERIC"
                javaType="java.lang.Float"/>
        <result column="customer_company_count" property="customerCompanyCount" jdbcType="NUMERIC"
                javaType="java.lang.Float"/>
        <result column="customer_followup_count" property="customerFollowupCount" jdbcType="NUMERIC"
                javaType="java.lang.Float"/>
        <result column="customer_see_house_count" property="customerSeeHouseCount" jdbcType="NUMERIC"
                javaType="java.lang.Float"/>
        <result column="part_timer_count" property="partTimerCount" jdbcType="NUMERIC" javaType="java.lang.Float"/>
        <result column="house_up_acreage_count" property="houseUpAcreageCount" jdbcType="NUMERIC"
                javaType="java.lang.Float"/>
        <result column="house_down_acreage_count" property="houseDownAcreageCount" jdbcType="NUMERIC"
                javaType="java.lang.Float"/>
        <result column="house_followup_count" property="houseFollowupCount" jdbcType="NUMERIC"
                javaType="java.lang.Float"/>
        <result column="order_count" property="orderCount" jdbcType="NUMERIC" javaType="java.lang.Float"/>
        <result column="new_customer_order_count" property="newCustomerOrderCount" jdbcType="NUMERIC"
                javaType="java.lang.Float"/>
        <result column="contract_amount_count" property="contractAmountCount" jdbcType="NUMERIC"
                javaType="java.lang.Float"/>
        <result column="achievement_amount_count" property="achievementAmountCount" jdbcType="NUMERIC"
                javaType="java.lang.Float"/>
        <result column="divide_amount_count" property="divideAmountCount" jdbcType="NUMERIC"
                javaType="java.lang.Float"/>
        <result column="order_back_amount_count" property="orderBackAmountCount" jdbcType="NUMERIC"
                javaType="java.lang.Float"/>
        <result column="name" property="name" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="count" property="count" jdbcType="NUMERIC" javaType="java.lang.Float"/>
        <result column="id" property="id" jdbcType="NUMERIC" javaType="java.lang.Long"/>
    </resultMap>

    <!-- 根据原生Sql查询记录 -->
    <select id="selectByNativeSql" parameterType="string" resultMap="BaseResultMap">
        ${value}
    </select>

    <!-- 根据原生SQL查询单条记录-->
    <select id="selectOneByNativeSql" parameterType="string" resultMap="BaseResultMap">
        ${value}
    </select>

    <!-- 根据原生Sql统计数量 -->
    <select id="countByNativeSql" parameterType="string" resultType="int">
        ${value}
    </select>

    <!-- 通用脚本查询条件 -->
    <sql id="selectSql">
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="createTimeStart != null">
                AND t.create_time <![CDATA[ >= ]]> #{createTimeStart}
            </if>
            <if test="createTimeEnd != null">
                AND t.create_time <![CDATA[ <= ]]> #{createTimeEnd}
            </if>
            <if test="createId != null">
                AND t.create_id = #{createId}
            </if>
            <if test="createDeptId != null">
                AND t.create_dept_id = #{createDeptId}
            </if>
            <if test="createDeptIds != null">
                AND t.create_dept_id in
                <foreach collection="createDeptIds" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="ownerId != null">
                AND t.owner_id = #{ownerId}
            </if>
            <if test="ownerDeptId != null">
                AND t.owner_dept_id = #{ownerDeptId}
            </if>
            <if test="ownerDeptIds != null">
                AND t.owner_dept_id in
                <foreach collection="ownerDeptIds" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>

            <!--客户条件-->
            <if test="cusOwnerType != null">
                AND t.cus_owner_type = #{cusOwnerType}
            </if>
            <if test="cusOwnerTypeList != null">
                AND t.cus_owner_type in
                <foreach collection="cusOwnerTypeList"
                         open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>

            <!--客户跟进条件-->
            <if test="followupType != null">
                AND t.followup_type = #{followupType}
            </if>

            <!--订单条件-->

            <if test="orderTimeStart != null">
                AND o.order_time <![CDATA[ >= ]]> #{orderTimeStart}
            </if>
            <if test="orderTimeEnd != null">
                AND o.order_time <![CDATA[ <= ]]> #{orderTimeEnd}
            </if>
            <if test="orderOwnerId != null">
                AND o.owner_id = #{orderOwnerId}
            </if>
            <if test="orderOwnerDeptIds != null">
                AND o.owner_dept_id in
                <foreach collection="orderOwnerDeptIds" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>

        </trim>
    </sql>

    <!-- 个人数据统计 -->
    <select id="countCustomer" parameterType="java.util.Map" resultType="int">
        select count(*) as ct from t_boms_crm_industry_customer t
        <include refid="selectSql"/>
    </select>
    <select id="countCustomerFollowup" parameterType="java.util.Map" resultType="int">
        select count(*) as ct from t_boms_crm_industry_customer_followup t
        <include refid="selectSql"/>
    </select>
    <select id="countPartTimer" parameterType="java.util.Map" resultType="int">
        select count(*) as ct from t_boms_crm_parttimer t
        <include refid="selectSql"/>
    </select>
    <select id="countHouseFollowup" parameterType="java.util.Map" resultType="int">
        select count(*) as ct from t_boms_house_industry_park_followup t
        <include refid="selectSql"/>
    </select>
    <select id="countOrder" parameterType="java.util.Map" resultType="int">
        select count(*) as ct from t_boms_trade_industry_order o left join t_boms_crm_industry_customer t on t.id=o.cus_id
        <include refid="selectSql"/>
    </select>

    <!--以下是-->
    <!-- 客户相关统计 -->
    <select id="selectCustomerCount" parameterType="java.util.Map" resultMap="BaseResultMap">
        select ${groupBy} as id, count(*) as count
        from t_boms_crm_industry_customer t
        <include refid="selectSql"/>
        <if test="groupBy">
            group by ${groupBy}
        </if>
    </select>

    <!-- 客户跟进相关统计 -->
    <select id="selectCustomerFollowupCount" parameterType="java.util.Map" resultMap="BaseResultMap">
        select ${groupBy} as id, count(*) as count
        from t_boms_crm_industry_customer_followup t
        <include refid="selectSql"/>
        <if test="groupBy != null">
            group by ${groupBy}
        </if>
    </select>

    <!-- 兼职相关统计 -->
    <select id="selectPartTimerCount" parameterType="java.util.Map" resultMap="BaseResultMap">
        select ${groupBy} as id, count(*) as count
        from t_boms_crm_parttimer t
        <include refid="selectSql"/>
        <if test="groupBy != null">
            group by ${groupBy}
        </if>
    </select>

    <!-- 房源相关统计 -->
    <select id="selectHouseEditDownAcreageCount" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        ${groupBy} as id,
        sum(to_number(old_value, '999999999.99'))
        - sum(to_number(new_value, '999999999.99')) as count
        from t_cii_log_edit_detail t

        <trim prefix="where" prefixOverrides="AND|OR">
            to_number(old_value, '999999999.99') <![CDATA[ > ]]> to_number(new_value, '999999999.99')
            <if test="createTimeStart != null">
                AND t.create_time <![CDATA[ >= ]]> #{createTimeStart}
            </if>
            <if test="createTimeEnd != null">
                AND t.create_time <![CDATA[ <= ]]> #{createTimeEnd}
            </if>
            <if test="createId != null">
                AND t.create_id = #{createId}
            </if>
            <if test="createDeptIds != null">
                AND t.create_dept_id in
                <foreach collection="createDeptIds" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            AND cls='com.cii.bomse.house.industry.entity.FloorIndustryEntity'
            AND field='leaseAcreage'
        </trim>
        <if test="groupBy != null">
            group by ${groupBy}
        </if>
    </select>
    <select id="selectHouseEditUpAcreageCount" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        ${groupBy} as id,
        sum(to_number(new_value, '999999999.99'))- sum(to_number(old_value, '999999999.99')) as count
        from t_cii_log_edit_detail t

        <trim prefix="where" prefixOverrides="AND|OR">
            to_number(old_value, '999999999.99') <![CDATA[ < ]]> to_number(new_value, '999999999.99')
            <if test="createTimeStart != null">
                AND t.create_time <![CDATA[ >= ]]> #{createTimeStart}
            </if>
            <if test="createTimeEnd != null">
                AND t.create_time <![CDATA[ <= ]]> #{createTimeEnd}
            </if>
            <if test="createId != null">
                AND t.create_id = #{createId}
            </if>
            <if test="createDeptIds != null">
                AND t.create_dept_id in
                <foreach collection="createDeptIds" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            AND cls='com.cii.bomse.house.industry.entity.FloorIndustryEntity'
            AND field='leaseAcreage'
        </trim>
        <if test="groupBy != null">
            group by ${groupBy}
        </if>
    </select>
    <select id="selectHouseFloorUpAcreageCount" parameterType="java.util.Map" resultMap="BaseResultMap">
        select ${groupBy} as id, sum(lease_acreage) as count
        from t_boms_house_industry_floor t
        <include refid="selectSql"/>
        <if test="groupBy != null">
            group by ${groupBy}
        </if>
    </select>
    <select id="selectHouseFollowupCount" parameterType="java.util.Map" resultMap="BaseResultMap">
        select ${groupBy} as id, count(*) as count
        from t_boms_house_industry_park_followup t
        <include refid="selectSql"/>
        <if test="groupBy != null">
            group by ${groupBy}
        </if>
    </select>

    <!-- 订单相关 -->
    <select id="selectOrderCount" parameterType="java.util.Map" resultMap="BaseResultMap">
        select ${groupBy} as id, count(*) as count
        from t_boms_trade_industry_order o left join t_boms_crm_industry_customer t on t.id=o.cus_id
        <include refid="selectSql"/>
        <if test="groupBy != null">
            group by ${groupBy}
        </if>
    </select>
    <select id="selectOrderAmountCount" parameterType="java.util.Map" resultMap="BaseResultMap">
        select ${groupBy} as id,
        sum(contract_amount) as contract_amount_count,
        sum(achievement_amount) as achievement_amount_count,
        sum(divide_amount) as divide_amount_count,
        sum(backed_amount) as order_back_amount_count
        from t_boms_trade_industry_order o
        <include refid="selectSql"/>
        <if test="groupBy != null">
            group by ${groupBy}
        </if>
    </select>
    <select id="selectOrderDivideCount" parameterType="java.util.Map" resultMap="BaseResultMap">
        select ${groupBy} as id,
        sum(divide_amount) as divide_amount_count
        from t_boms_trade_industry_order_divide o
        <include refid="selectSql"/>
        <if test="groupBy != null">
            group by ${groupBy}
        </if>
    </select>

</mapper>